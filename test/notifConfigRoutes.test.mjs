import { jest } from '@jest/globals';
import request from 'supertest';

// ‚úÖ Mock del middleware para saltarse la verificaci√≥n de token
jest.unstable_mockModule('../controllers/authMiddle.js', () => ({
  verifyToken: (req, res, next) => next()
}));

// ‚úÖ Importar app *despu√©s* de aplicar mocks
const { default: app } = await import('../server.js');

describe('Rutas de configuraci√≥n de notificaciones', () => {
  test('GET /api/notificaciones/configuracion-notificaciones/:idUsuario devuelve configuraci√≥n', async () => {
    const response = await request(app).get('/api/notificaciones/configuracion-notificaciones/1');
    console.log('üîç GET configuraci√≥n:', response.status, response.body);

    expect([200, 204, 404]).toContain(response.status);
    if (response.status === 200) {
        expect(Array.isArray(response.body)).toBe(true); // ‚úÖ
    }
  });

  test('PUT /api/notificaciones/configuracion-notificaciones/:idUsuario actualiza configuraci√≥n', async () => {
    const nuevaConfig = {
      recibirCorreos: true,
      frecuencia: 'diaria' // ajusta seg√∫n tu modelo
    };

    const response = await request(app)
      .put('/api/notificaciones/configuracion-notificaciones/1')
      .send(nuevaConfig);

    console.log('üîç PUT configuraci√≥n:', response.status, response.body);

    expect([200, 400, 404]).toContain(response.status);
    if (response.status === 200) {
        expect(response.body.message).toMatch(/configuraci√≥n/i); // ‚úÖ Compatible con "Cambio de configuraci√≥n exitosa"
    }
  });
});